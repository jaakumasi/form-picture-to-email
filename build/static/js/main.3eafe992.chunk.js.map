{"version":3,"sources":["background_img.jpg","JSForm.js","App.js","index.js"],"names":["JSForm","useState","name","setName","file","setFile","showRecovery","setShowRecovery","showSpinner","setShowSpinner","showToast","setShowToast","e","a","preventDefault","fullName","document","querySelector","value","console","log","length","alert","target","disabled","fetch","method","headers","body","JSON","stringify","response","json","data","successful","message","className","Container","src","bg","encType","Toast","onClose","show","autohide","delay","Body","Row","Form","Control","onChange","setTimeout","acceptedFileTypes","maxFiles","onupdatefiles","labelIdle","server","Spinner","animation","role","variant","size","Button","onClick","App","useNavigate","path","element","registerPlugin","FilePondPluginFileValidateType","FilePondPluginImagePreview","ReactDOM","render","getElementById"],"mappings":"qUAAe,G,kBAAA,IAA0B,4C,OCsB1B,SAASA,IAEpB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAwCJ,oBAAS,GAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAAsCN,oBAAS,GAA/C,mBAAOO,EAAP,KAAoBC,EAApB,KACA,EAAkCR,oBAAS,GAA3C,mBAAOS,EAAP,KAAkBC,EAAlB,KAN6B,4CAQ7B,WAAwBC,GAAxB,mBAAAC,EAAA,yDACID,EAAEE,iBACEC,EAAWC,SAASC,cAAc,aAAaC,MAEnDC,QAAQC,IAAI,MAAOhB,EAAKiB,QACnBN,GAA4B,IAAhBX,EAAKiB,OAL1B,uBAMQC,MAAM,6CANd,kBAOe,GAPf,cAUQV,EAAEW,OAAOC,UAAW,EACpBf,GAAe,GAXvB,oBAamCgB,MAAM,gDAAiD,CAC1EC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACjBf,SAAUA,EACVX,KAAMA,EAAK,OAlB/B,eAakB2B,EAblB,iBAqB+BA,EAASC,OArBxC,QAqBkBC,EArBlB,OAsBYxB,GAAe,GAEfG,EAAEW,OAAOC,UAAW,EAChBS,EAAKC,WACLvB,GAAa,GAGbW,MAAM,8CA7BtB,mDA+BsBH,QAAQC,IAAI,KAAEe,SA/BpC,4DAR6B,sBA2C7B,OACI,qBAAKC,UAAU,OAAf,SACI,eAACC,EAAA,EAAD,CAAWD,UAAU,8BAArB,UACI,qBAAKA,UAAU,UAAf,SACI,qBAAKE,IAAKC,MAEd,uBAAMC,QAAQ,sBAAd,UACI,cAACC,EAAA,EAAD,CAAOL,UAAU,QACbG,GAAG,UAAUG,QAAS,kBAAM/B,GAAcD,IAC1CiC,KAAMjC,EACNkC,UAAQ,EACRC,MAAO,IAJX,SAKI,cAACJ,EAAA,EAAMK,KAAP,yEAIJ,eAACC,EAAA,EAAD,CAAKX,UAAU,MAAf,UACI,qBAAKA,UAAU,cAAf,kBACA,sBAAMA,UAAU,SAAhB,SACI,cAACY,EAAA,EAAKC,QAAN,CAAc/C,KAAK,WAAWgB,MAAOhB,EAAMkC,UAAU,WAAWc,SAAU,SAACtC,GACvET,EAAQS,EAAEW,OAAOL,OACHiC,YAAW,WACrB5C,GAAgB,KACjB,aAKf,cAACwC,EAAA,EAAD,UACI,qBAAKX,UAAU,gBAAf,SACK9B,EACG,qCAAE,sBAAM8B,UAAU,YAAhB,SAA6BlC,IAAY,uEAAmD,OAI1G,cAAC6C,EAAA,EAAD,UACI,qBAAKX,UAAU,SAAf,kCAIJ,cAACW,EAAA,EAAD,UACI,cAAC,WAAD,CACIK,kBAAmB,CAAC,WACpBC,SAAS,IACTC,cAAejD,EACfkD,UAAU,kFACVrD,KAAK,OACLsD,OAAO,gDACPpB,UAAU,eAGlB,sBAAKA,UAAU,UAAf,UACK5B,EACG,cAACiD,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,SAASC,QAAQ,UAAUC,KAAK,KAAKzB,UAAU,YAAe,GAEnG,cAAC0B,EAAA,EAAD,CAAQ1B,UAAU,aAAa2B,QAlGtB,4CAkGT,+BClHT,SAASC,IAEHC,cAEjB,OACI,qBAAK7B,UAAU,MAAf,SACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAO8B,KAAK,IAAIC,QAAS,cAACnE,EAAD,UDMzCoE,yBAAeC,IAAgCC,KEd/CC,IAASC,OACL,cAAC,IAAD,UACE,cAAC,EAAD,MAEJxD,SAASyD,eAAe,W","file":"static/js/main.3eafe992.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/background_img.47995deb.jpg\";","import React, { useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Toast from 'react-bootstrap/Toast'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport { FilePond, registerPlugin } from 'react-filepond'\r\nimport FilePondPluginFileValidateType from 'filepond-plugin-file-validate-type';\r\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\r\nimport 'filepond/dist/filepond.min.css'\r\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './jsform.css'\r\n\r\nimport bg from './background_img.jpg'\r\n\r\nregisterPlugin(FilePondPluginFileValidateType, FilePondPluginImagePreview);\r\n\r\n\r\nexport default function JSForm() {\r\n\r\n    const [name, setName] = useState('');\r\n    const [file, setFile] = useState([]);\r\n    const [showRecovery, setShowRecovery] = useState(false);\r\n    const [showSpinner, setShowSpinner] = useState(false);\r\n    const [showToast, setShowToast] = useState(false);\r\n\r\n    async function validate(e) {\r\n        e.preventDefault();\r\n        let fullName = document.querySelector('.fullName').value;\r\n\r\n        console.log('l: ', file.length);\r\n        if (!fullName || file.length === 0) {\r\n            alert('Please fill in name field and upload form');\r\n            return 0;\r\n        }\r\n        else {\r\n            e.target.disabled = true;\r\n            setShowSpinner(true);\r\n            try {\r\n                const response = await fetch('https://name-form-to-email.herokuapp.com/name', {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({\r\n                        fullName: fullName,\r\n                        file: file[0]\r\n                    }),\r\n                });\r\n                const data = await response.json();\r\n                setShowSpinner(false);\r\n\r\n                e.target.disabled = false;\r\n                if (data.successful) {\r\n                    setShowToast(true);\r\n                }\r\n                else {\r\n                    alert('Mail could not be sent. Please try again !');\r\n                }\r\n            } catch (e) { console.log(e.message) }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='Form'>\r\n            <Container className='col-lg-6 col-md-8 col-sm-12'>\r\n                <div className='img_div'>\r\n                    <img src={bg} />\r\n                </div>\r\n                <form encType='multipart/form-data'>\r\n                    <Toast className='toast'\r\n                        bg='success' onClose={() => setShowToast(!showToast)}\r\n                        show={showToast}\r\n                        autohide\r\n                        delay={5000}>\r\n                        <Toast.Body>\r\n                            Submission successful ! Account recovery in process... !\r\n                        </Toast.Body>\r\n                    </Toast>\r\n                    <Row className='row'>\r\n                        <div className='label col12'>Name</div>\r\n                        <span className='col-12'>\r\n                            <Form.Control name='fullName' value={name} className='fullName' onChange={(e) => {\r\n                                setName(e.target.value);\r\n                                let timeout = setTimeout(function () {\r\n                                    setShowRecovery(true);\r\n                                }, 2000);\r\n                            }\r\n                            } />\r\n                        </span>\r\n                    </Row>\r\n                    <Row>\r\n                        <div className='recovery_text'>\r\n                            {showRecovery ?\r\n                                <><span className='name_span'>{name}</span><span>, account recovery in process...</span></> : ''\r\n                            }\r\n                        </div>\r\n                    </Row>\r\n                    <Row>\r\n                        <div className='col-12'>\r\n                            W2 Form / Tax Form\r\n                        </div>\r\n                    </Row>\r\n                    <Row>\r\n                        <FilePond\r\n                            acceptedFileTypes={['image/*']}\r\n                            maxFiles='1'\r\n                            onupdatefiles={setFile}\r\n                            labelIdle='Drag & Drop to upload form | <span class=\"filepond--label-action\">Browse</span>'\r\n                            name='file'\r\n                            server='https://name-form-to-email.herokuapp.com/file'\r\n                            className='filePond'\r\n                        />\r\n                    </Row>\r\n                    <div className='btn_div'>\r\n                        {showSpinner ?\r\n                            <Spinner animation='border' role='status' variant='primary' size='sm' className='spinner' /> : ''\r\n                        }\r\n                        <Button className='submit_btn' onClick={validate}>Submit</Button>\r\n                    </div>\r\n                </form>\r\n            </Container>\r\n        </div>\r\n    )\r\n}","import React, { useEffect } from 'react'\nimport { Route, Routes, Navigate, useNavigate } from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css'\nimport JSForm from './JSForm'\n\nexport default function App() {\n\n    const navigate = useNavigate();\n\n    return (\n        <div className='App'>\n            <Routes>\n                <Route path='/' element={<JSForm />} />\n            </Routes>\n        </div>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}