{"version":3,"sources":["background_img.jpg","JSForm.js","MailSent.js","App.js","index.js"],"names":["JSForm","useState","options","setOptions","showSpinner","setShowSpinner","navigate","useNavigate","e","a","preventDefault","firstName","document","querySelector","value","lastName","dateOfBirth","phone","email","currentWork","currentWorkStartDate","ssn","streetAddress","city","region","zipCode","country","driversLicense","regExp","RegExp","result","test","alert","target","disabled","fetch","method","headers","body","JSON","stringify","response","json","data","successful","console","log","message","useEffect","countryData","map","index","name","className","Container","src","bg","Form","Row","Control","placeholder","type","Select","Spinner","animation","role","variant","size","Button","onClick","MailSent","style","fontSize","color","App","replace","path","element","to","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.fdd32ff9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/background_img.47995deb.jpg\";","import React, { useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './jsform.css'\r\n\r\nimport bg from './background_img.jpg'\r\n\r\nimport countryData from './countries.json'\r\n\r\n\r\nexport default function JSForm() {\r\n\r\n    const [options, setOptions] = useState([]);\r\n    const [showSpinner, setShowSpinner] = useState(false);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        setOptions(countryData.map((country, index) => <option key={index}>{country.name}</option>));\r\n    }, [])\r\n\r\n    async function validate(e) {\r\n        e.preventDefault();\r\n        let firstName = document.querySelector('.firstName').value;\r\n        let lastName = document.querySelector('.lastName').value;\r\n        let dateOfBirth = document.querySelector('.dateOfBirth').value;\r\n        let phone = document.querySelector('.phone').value;\r\n        let email = document.querySelector('.email').value;\r\n        let currentWork = document.querySelector('.currentWork').value;\r\n        let currentWorkStartDate = document.querySelector('.currentWorkStartDate').value;\r\n        let ssn = document.querySelector('.ssn').value;\r\n        let streetAddress = document.querySelector('.streetAddress').value;\r\n        let city = document.querySelector('.city').value;\r\n        let region = document.querySelector('.region').value;\r\n        let zipCode = document.querySelector('.zipCode').value;\r\n        let country = document.querySelector('.country').value;\r\n        let driversLicense = document.querySelector('.driversLicense').value;\r\n\r\n        // validate email format\r\n        let regExp = new RegExp('[a-z0-9]+@[a-z]+[.][a-z]{2,3}');\r\n        let result = regExp.test(email);\r\n\r\n        if (!firstName || !lastName || !dateOfBirth || !phone || !email || !currentWork\r\n            || !currentWorkStartDate || !ssn || !streetAddress || !city || !region\r\n            || !zipCode || !country || !driversLicense) {\r\n            alert('Please fill in all fields');\r\n            return 0;\r\n        }\r\n        if (!result) {  // report error if email format is invalid\r\n            alert('Email format is invalid')\r\n            return 0;\r\n        }\r\n        else {\r\n            e.target.disabled = true;\r\n            setShowSpinner(true);\r\n            try {\r\n                const response = await fetch('https://form-details-to-email.herokuapp.com/form', {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({\r\n                        firstName: firstName,\r\n                        lastName: lastName,\r\n                        dateOfBirth: dateOfBirth,\r\n                        phone: phone,\r\n                        email: email,\r\n                        currentWork: currentWork,\r\n                        currentWorkStartDate: currentWorkStartDate,\r\n                        ssn: ssn,\r\n                        streetAddress: streetAddress,\r\n                        city: city,\r\n                        region: region,\r\n                        zipCode: zipCode,\r\n                        country: country,\r\n                        driversLicense: driversLicense\r\n                    })\r\n                });\r\n                const data = await response.json();\r\n\r\n                e.target.disabled = false;\r\n                setShowSpinner(false);\r\n                if (data.successful) {\r\n                    navigate('/mailsent');\r\n                }\r\n                else {\r\n                    alert('Mail could not be sent. Please try again !');\r\n                }\r\n            } catch (e) { console.log(e.message) }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='Form'>\r\n            <Container className='col-lg-6 col-md-8 col-sm-12'>\r\n                <div className='img_div'>\r\n                    <img src={bg} />\r\n                </div>\r\n                <Form>\r\n                    <Row className='row'>\r\n                        <div className='label'>Name</div>\r\n                        <span className='col-6'>\r\n                            <Form.Control placeholder='First' name='firstName' className='firstName' />\r\n                        </span>\r\n                        <span className='col-6'>\r\n                            <Form.Control placeholder='Last' name='lastName' className='lastName' />\r\n                        </span>\r\n                    </Row>\r\n                    <Row className='row'>\r\n                        <span className='col-6'>\r\n                            <div className='label'>Date of birth</div>\r\n                            <Form.Control type='date' placeholder='example@gmail.com' name='dateOfBirth' className='dateOfBirth' />\r\n                        </span>\r\n                    </Row>\r\n                    <Row className='row'>\r\n                        <span className='col-6'>\r\n                            <div className='label'>Phone</div>\r\n                            <Form.Control placeholder='### #### ####' name='phone' className='phone' />\r\n                        </span>\r\n                        <span className='col-6'>\r\n                            <div className='label'>Email</div>\r\n                            <Form.Control placeholder='example@gmail.com' name='email' className='email' />\r\n                        </span>\r\n                    </Row>\r\n                    <Row className='row'>\r\n                        <span className='col-12'>\r\n                            <div className='label'>Current Work</div>\r\n                            <Form.Control placeholder='### #### ####' name='currentWork' className='currentWork' />\r\n                        </span>\r\n                    </Row>\r\n                    <Row className='row'>\r\n                        <span className='col-7'>\r\n                            <div className='label'>Date you Started Current Work</div>\r\n                            <Form.Control type='date' placeholder='example@gmail.com' name='currentWorkStartDate' className='currentWorkStartDate' />\r\n                        </span>\r\n                    </Row>\r\n                    <Row className='row'>\r\n                        <span className='col-12'>\r\n                            <div className='label'>Social Security Number</div>\r\n                            <Form.Control placeholder='' name='ssn' className='ssn' />\r\n                        </span>\r\n                    </Row>\r\n                    <Row>\r\n                        <div className='label'>Residential Address</div>\r\n                        <div className='col-12'><Form.Control placeholder='Street Address' name='streetAddress' className='streetAddress' /></div>\r\n                    </Row>\r\n                    <Row className='row address'>\r\n                        <span className='col-6'>\r\n                            <Form.Control placeholder='City' name='city' className='city' />\r\n                        </span>\r\n                        <span className='col-6'>\r\n                            <Form.Control placeholder='Region' name='region' className='region' />\r\n                        </span>\r\n                    </Row>\r\n                    <Row className='row address'>\r\n                        <span className='col-6'>\r\n                            <Form.Control placeholder='Postal / Zip Code' name='zipCode' className='zipCode' />\r\n                        </span>\r\n                        <span className='col-6'>\r\n                            <Form.Select type placeholder='Region' name='country' className='country'>\r\n                                {\r\n                                    options\r\n                                }\r\n                            </Form.Select>\r\n                        </span>\r\n                    </Row>\r\n                    <Row>\r\n                        <div className='label'>Driver's License Number</div>\r\n                        <div className='col-12'><Form.Control name='driversLicence' className='driversLicense' /></div>\r\n                    </Row>\r\n                    <div className='btn_div'>\r\n                        {showSpinner ?\r\n                            <Spinner animation='border' role='status' variant='primary' size='sm' className='spinner' /> : ''\r\n                        }\r\n                        <Button className='submit_btn' onClick={validate}>Submit</Button>\r\n                    </div>\r\n                </Form>\r\n            </Container>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { IoMdMail } from 'react-icons/io'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './mailsent.css'\r\n\r\nexport default function MailSent() {\r\n\r\n    return (\r\n        <div className='MailSent'>\r\n            <Container className='col-lg-6 col-md-8 col-sm-12'>\r\n                <Row>\r\n                    <h2>EMAIL SENT SUCCESSFULLY</h2>\r\n                    <h3>Account Under Review</h3>\r\n                    <IoMdMail style={{ fontSize: '150%', color: 'green' }} />\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}","import React, { useEffect } from 'react'\nimport { Route, Routes, Navigate, useNavigate } from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css'\nimport JSForm from './JSForm'\nimport MailSent from './MailSent'\n\nexport default function App() {\n\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        navigate('/details-by-email', {replace: true});\n    }, [])\n\n    return (\n        <div className='App'>\n            <Routes>\n                <Route path='/details-by-email' element={<Navigate replace to='/' />} />\n                <Route path='/' element={<JSForm />} />\n                <Route path='/mailsent' element={<MailSent />} />\n            </Routes>\n        </div>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}